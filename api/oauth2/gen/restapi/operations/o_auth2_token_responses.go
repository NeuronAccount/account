// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/NeuronGroup/Account/api/oauth2/gen/models"
)

// OAuth2TokenOKCode is the HTTP code returned for type OAuth2TokenOK
const OAuth2TokenOKCode int = 200

/*OAuth2TokenOK ok

swagger:response oAuth2TokenOK
*/
type OAuth2TokenOK struct {

	/*
	  In: Body
	*/
	Payload *models.AccessToken `json:"body,omitempty"`
}

// NewOAuth2TokenOK creates OAuth2TokenOK with default headers values
func NewOAuth2TokenOK() *OAuth2TokenOK {
	return &OAuth2TokenOK{}
}

// WithPayload adds the payload to the o auth2 token o k response
func (o *OAuth2TokenOK) WithPayload(payload *models.AccessToken) *OAuth2TokenOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the o auth2 token o k response
func (o *OAuth2TokenOK) SetPayload(payload *models.AccessToken) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *OAuth2TokenOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*OAuth2TokenDefault Error response

swagger:response oAuth2TokenDefault
*/
type OAuth2TokenDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.OAuth2TokenDefaultBody `json:"body,omitempty"`
}

// NewOAuth2TokenDefault creates OAuth2TokenDefault with default headers values
func NewOAuth2TokenDefault(code int) *OAuth2TokenDefault {
	if code <= 0 {
		code = 500
	}

	return &OAuth2TokenDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the o auth2 token default response
func (o *OAuth2TokenDefault) WithStatusCode(code int) *OAuth2TokenDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the o auth2 token default response
func (o *OAuth2TokenDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the o auth2 token default response
func (o *OAuth2TokenDefault) WithPayload(payload *models.OAuth2TokenDefaultBody) *OAuth2TokenDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the o auth2 token default response
func (o *OAuth2TokenDefault) SetPayload(payload *models.OAuth2TokenDefaultBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *OAuth2TokenDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
