// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewSmsCodeParams creates a new SmsCodeParams object
// with the default values initialized.
func NewSmsCodeParams() *SmsCodeParams {
	var ()
	return &SmsCodeParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewSmsCodeParamsWithTimeout creates a new SmsCodeParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewSmsCodeParamsWithTimeout(timeout time.Duration) *SmsCodeParams {
	var ()
	return &SmsCodeParams{

		timeout: timeout,
	}
}

// NewSmsCodeParamsWithContext creates a new SmsCodeParams object
// with the default values initialized, and the ability to set a context for a request
func NewSmsCodeParamsWithContext(ctx context.Context) *SmsCodeParams {
	var ()
	return &SmsCodeParams{

		Context: ctx,
	}
}

// NewSmsCodeParamsWithHTTPClient creates a new SmsCodeParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewSmsCodeParamsWithHTTPClient(client *http.Client) *SmsCodeParams {
	var ()
	return &SmsCodeParams{
		HTTPClient: client,
	}
}

/*SmsCodeParams contains all the parameters to send to the API endpoint
for the sms code operation typically these are written to a http.Request
*/
type SmsCodeParams struct {

	/*CaptchaCode*/
	CaptchaCode *string
	/*CaptchaID*/
	CaptchaID *string
	/*Phone*/
	Phone string
	/*Scene*/
	Scene string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the sms code params
func (o *SmsCodeParams) WithTimeout(timeout time.Duration) *SmsCodeParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the sms code params
func (o *SmsCodeParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the sms code params
func (o *SmsCodeParams) WithContext(ctx context.Context) *SmsCodeParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the sms code params
func (o *SmsCodeParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the sms code params
func (o *SmsCodeParams) WithHTTPClient(client *http.Client) *SmsCodeParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the sms code params
func (o *SmsCodeParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCaptchaCode adds the captchaCode to the sms code params
func (o *SmsCodeParams) WithCaptchaCode(captchaCode *string) *SmsCodeParams {
	o.SetCaptchaCode(captchaCode)
	return o
}

// SetCaptchaCode adds the captchaCode to the sms code params
func (o *SmsCodeParams) SetCaptchaCode(captchaCode *string) {
	o.CaptchaCode = captchaCode
}

// WithCaptchaID adds the captchaID to the sms code params
func (o *SmsCodeParams) WithCaptchaID(captchaID *string) *SmsCodeParams {
	o.SetCaptchaID(captchaID)
	return o
}

// SetCaptchaID adds the captchaId to the sms code params
func (o *SmsCodeParams) SetCaptchaID(captchaID *string) {
	o.CaptchaID = captchaID
}

// WithPhone adds the phone to the sms code params
func (o *SmsCodeParams) WithPhone(phone string) *SmsCodeParams {
	o.SetPhone(phone)
	return o
}

// SetPhone adds the phone to the sms code params
func (o *SmsCodeParams) SetPhone(phone string) {
	o.Phone = phone
}

// WithScene adds the scene to the sms code params
func (o *SmsCodeParams) WithScene(scene string) *SmsCodeParams {
	o.SetScene(scene)
	return o
}

// SetScene adds the scene to the sms code params
func (o *SmsCodeParams) SetScene(scene string) {
	o.Scene = scene
}

// WriteToRequest writes these params to a swagger request
func (o *SmsCodeParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.CaptchaCode != nil {

		// query param captchaCode
		var qrCaptchaCode string
		if o.CaptchaCode != nil {
			qrCaptchaCode = *o.CaptchaCode
		}
		qCaptchaCode := qrCaptchaCode
		if qCaptchaCode != "" {
			if err := r.SetQueryParam("captchaCode", qCaptchaCode); err != nil {
				return err
			}
		}

	}

	if o.CaptchaID != nil {

		// query param captchaId
		var qrCaptchaID string
		if o.CaptchaID != nil {
			qrCaptchaID = *o.CaptchaID
		}
		qCaptchaID := qrCaptchaID
		if qCaptchaID != "" {
			if err := r.SetQueryParam("captchaId", qCaptchaID); err != nil {
				return err
			}
		}

	}

	// query param phone
	qrPhone := o.Phone
	qPhone := qrPhone
	if qPhone != "" {
		if err := r.SetQueryParam("phone", qPhone); err != nil {
			return err
		}
	}

	// query param scene
	qrScene := o.Scene
	qScene := qrScene
	if qScene != "" {
		if err := r.SetQueryParam("scene", qScene); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
